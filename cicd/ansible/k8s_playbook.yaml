- name: Update package cache and upgrade packages
  hosts: all
  become: yes

  tasks:
    - name: Update package cache and upgrade packages
      shell: sudo apt update && sudo apt upgrade -y

- name: Disable swap
  hosts: all
  become: yes

  tasks:
    - name: Turn off swap
      shell: sudo swapoff -a

    - name: Comment out swap lines in /etc/fstab
      shell: sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Configure kernel modules and sysctl settings
  hosts: all
  become: yes

  tasks:
    - name: Write to /etc/modules-load.d/containerd.conf
      shell: |
        echo "overlay" > /etc/modules-load.d/containerd.conf
        echo "br_netfilter" >> /etc/modules-load.d/containerd.conf

    - name: Load kernel modules
      shell: sudo modprobe overlay && sudo modprobe br_netfilter

    - name: Write to /etc/sysctl.d/kubernetes.conf
      shell: |
        echo "net.bridge.bridge-nf-call-ip6tables = 1" > /etc/sysctl.d/kubernetes.conf
        echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/kubernetes.conf
        echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.d/kubernetes.conf

    - name: Apply sysctl changes
      shell: sudo sysctl --system

- name: Install and configure containerd
  hosts: all
  become: yes

  tasks:
    - name: Install prerequisites
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg.tmp
        mv /etc/apt/trusted.gpg.d/docker.gpg.tmp /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add Docker repository
      shell: sudo add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Generate containerd config file
      shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

    - name: Configure containerd (SystemdCgroup)
      shell: sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart and enable containerd service
      service:
        name: containerd
        state: restarted
        enabled: yes

- name: Add Kubernetes repository and install packages
  hosts: all
  become: yes

  tasks:
    - name: Add Kubernetes repository
      lineinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        create: yes
        line: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"

    - name: Import Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg.tmp
        mv /etc/apt/keyrings/kubernetes-apt-keyring.gpg.tmp /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Mark Kubernetes packages on hold
      shell: sudo apt-mark hold kubelet kubeadm kubectl

- name: Initialize kubeadm
  hosts: kubernetes_control_plane
  become: yes

  tasks:
    - name: Initialize Kubernetes control plane
      shell: sudo kubeadm init
      register: kubeadm_output

    - name: Save kubeadm output to a file
      copy:
        dest: /tmp/kubeadm_output.txt
        content: "{{ kubeadm_output.stdout }}"
        mode: '0600'

    - name: Extract join command
      shell: cat /tmp/kubeadm_output.txt | grep -A 1 "kubeadm join" > /tmp/join_command.txt

    - name: Fetch the join_command.txt
      fetch:
        src: /tmp/join_command.txt
        dest: /tmp/join_command.txt
        flat: true

    - name: Save kubeconfig
      shell: |
        mkdir -p ~/.kube && cp /etc/kubernetes/admin.conf ~/.kube/config && sudo chown $(id -u):$(id -g) ~/.kube/config
        mkdir -p /home/ubuntu/.kube && cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config && sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube/

    - name: Fetch the join_command.txt
      fetch:
        src: /home/ubuntu/.kube/config
        dest: /tmp/config
        flat: true

- name: Copy config to root user
  hosts: localhost
  become: yes

  tasks:
    - name: copy the config file
      shell: |
        mkdir -p ~/.kube && cp /tmp/config ~/.kube/config && sudo chown $(id -u):$(id -g) ~/.kube/config
        mkdir -p /home/ubuntu/.kube && cp /tmp/config /home/ubuntu/.kube/config && sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube/

- name: Set up worker nodes
  hosts: kubernetes_workers
  become: yes

  tasks:
    - name: Copy join_command.txt
      copy:
        src: /tmp/join_command.txt
        dest: /tmp/

    - name: Read join command from file
      shell: cat /tmp/join_command.txt
      register: join_command

    - name: Join the cluster
      shell: "{{ join_command.stdout }}"

- name: Set up Calico CNI
  hosts: kubernetes_control_plane
  become: yes

  tasks:
    - name: Apply calico yaml
      shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
