pipeline {
  agent any

  environment {
    TIMESTAMP = ""
  }

  stage('Capture Timestamp') {
    steps {
      script {
        env.TIMESTAMP = sh(script: 'date +%Y%m%d%H%M%S', returnStdout: true).trim()
      }
    }
  }
  
  stages {
    stage('Provision ec2 instances and build ansible inventory') {
      steps {
        script {
          sh '''
            cd cicd/tf
            terraform apply -var TIMESTAMP=${env.TIMESTAMP} -auto-approve
            cd -
          '''
        }
      }
    }

    stage('Create Kubernetes cluster') {
      steps {
        script {
          sh '''
            cd cicd/ansible
            ansible-playbook -i /home/ubuntu/ansible/inventory-${env.TIMESTAMP} k8s_playbook.yaml
            cd -
          '''
        }
      }
    }

    stage('Checkout, Build and Deploy Ad Service') {
      steps {
        dir('adservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-adservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold run --default-repo ajayksri'
            }

      }
    }

    stage('Checkout and Deploy Cart Service') {
      steps {
        dir('cartservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-cartservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images cartservice:latest'
            }

        }
      }
    } 
 
    stage('Checkout and Deploy Checkout Service') {
      steps {
        dir('ccheckoutservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-checkoutservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images checkoutservice:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Currency Service') {
      steps {
        dir('currencyservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-currencyservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images currencyservice:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Email Service') {
      steps {
        dir('emailservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-emailservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images emailservice:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Frontend') {
      steps {
        dir('frontend') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-frontend.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images frontend:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy LoadGenerator') {
      steps {
        dir('loadgenerator') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-loadgenerator.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images loadgenerator:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Payment Service') {
      steps {
        dir('paymentservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-paymentservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images paymentservice:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Product Catalog Service') {
      steps {
        dir('productcatalogservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-productcatalogservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images productcatalogservice:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Recommendation Service') {
      steps {
        dir('recommendationservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-recommendationservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images recommendationservice:latest'
            }

        }
      }
    } 

    stage('Checkout and Deploy Shiping Service') {
      steps {
        dir('shipingservice') {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/ajayksri/ms-shipingservice.git']]
            ])
            
            script {
                sh 'sudo /usr/local/bin/skaffold deploy --default-repo ajayksri --images shippingservice:latest'
            }

        }
      }
    } 

  }
}
